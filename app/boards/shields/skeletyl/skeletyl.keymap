/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
            bindings = <
&kp Q  &mt LCTRL W  &mt LEFT_ALT E  &mt LEFT_GUI R  &kp T                      &kp Y                           &mt RIGHT_GUI U  &mt RIGHT_ALT I  &mt RCTRL O  &kp P
&kp A  &lt 3 S      &lt 2 D         &lt 1 F         &kp G                      &kp H                           &lt 1 J          &lt 2 K          &lt 3 L      &kp SINGLE_QUOTE
&kp Z  &kp X        &kp C           &kp V           &kp B                      &kp N                           &kp M            &kp COMMA        &kp DOT      &kp FSLH
                           &kp ESCAPE      &kp LEFT_SHIFT  &mt LS(LA(LCTRL)) SPACE    &mt LS(LA(LC(LEFT_GUI))) ENTER  &kp BACKSPACE    &kp TAB
            >;
        };
                lower_layer {
            bindings = <
&kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans
&bt BT_CLR    &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans
                                   &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

                raise_layer {
            bindings = <
&kp GRAVE  &kp LS(LG(NUMBER_3))  &kp LG(LS(TAB))   &kp LG(TAB)    &kp C_BRIGHTNESS_INC    &kp C_VOLUME_UP    &kp K_COPY      &kp UP         &kp K_PASTE       &trans
&trans     &kp DELETE            &kp END           &kp HOME       &kp C_BRIGHTNESS_DEC    &kp C_VOLUME_DOWN  &kp LEFT        &kp DOWN       &kp RIGHT         &kp NON_US_BACKSLASH
&trans     &trans                &kp K_CALCULATOR  &kp LC(LG(Q))  &trans                  &kp K_MUTE         &kp K_PREVIOUS  &kp K_NEXT     &kp K_PLAY_PAUSE  &kp K_STOP
                                        &kp LGUI          &trans         &kp SPACE               &kp RET            &trans          &kp BACKSPACE
            >;
        };
        Numbers_Symbols {
            bindings = <
&kp LS(POUND)  &kp LS(DLLR)   &kp LS(LBRC)  &kp LS(RBRC)  &kp FSLH     &kp LS(STAR)   &kp N7  &kp N8    &kp N9  &kp LS(PLUS)
&kp LBKT       &kp RBKT       &kp LS(LPAR)  &kp LS(RPAR)  &kp COMMA    &kp N0         &kp N4  &kp N5    &kp N6  &kp DOT
&kp LS(CARET)  &kp LS(PRCNT)  &kp LS(AT)    &kp LS(EXCL)  &trans       &kp LS(UNDER)  &kp N1  &kp N2    &kp N3  &kp MINUS
                                      &trans        &trans        &trans       &trans         &trans  &kp BSPC
            >;
        };
        };
};
